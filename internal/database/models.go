// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type GoDbChatMessagesDirectMessageType string

const (
	GoDbChatMessagesDirectMessageTypeText  GoDbChatMessagesDirectMessageType = "text"
	GoDbChatMessagesDirectMessageTypeImage GoDbChatMessagesDirectMessageType = "image"
	GoDbChatMessagesDirectMessageTypeFile  GoDbChatMessagesDirectMessageType = "file"
)

func (e *GoDbChatMessagesDirectMessageType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GoDbChatMessagesDirectMessageType(s)
	case string:
		*e = GoDbChatMessagesDirectMessageType(s)
	default:
		return fmt.Errorf("unsupported scan type for GoDbChatMessagesDirectMessageType: %T", src)
	}
	return nil
}

type NullGoDbChatMessagesDirectMessageType struct {
	GoDbChatMessagesDirectMessageType GoDbChatMessagesDirectMessageType
	Valid                             bool // Valid is true if GoDbChatMessagesDirectMessageType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGoDbChatMessagesDirectMessageType) Scan(value interface{}) error {
	if value == nil {
		ns.GoDbChatMessagesDirectMessageType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GoDbChatMessagesDirectMessageType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGoDbChatMessagesDirectMessageType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GoDbChatMessagesDirectMessageType), nil
}

type GoDbChatMessagesGroupMessageType string

const (
	GoDbChatMessagesGroupMessageTypeText  GoDbChatMessagesGroupMessageType = "text"
	GoDbChatMessagesGroupMessageTypeImage GoDbChatMessagesGroupMessageType = "image"
	GoDbChatMessagesGroupMessageTypeFile  GoDbChatMessagesGroupMessageType = "file"
)

func (e *GoDbChatMessagesGroupMessageType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GoDbChatMessagesGroupMessageType(s)
	case string:
		*e = GoDbChatMessagesGroupMessageType(s)
	default:
		return fmt.Errorf("unsupported scan type for GoDbChatMessagesGroupMessageType: %T", src)
	}
	return nil
}

type NullGoDbChatMessagesGroupMessageType struct {
	GoDbChatMessagesGroupMessageType GoDbChatMessagesGroupMessageType
	Valid                            bool // Valid is true if GoDbChatMessagesGroupMessageType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGoDbChatMessagesGroupMessageType) Scan(value interface{}) error {
	if value == nil {
		ns.GoDbChatMessagesGroupMessageType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GoDbChatMessagesGroupMessageType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGoDbChatMessagesGroupMessageType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GoDbChatMessagesGroupMessageType), nil
}

// 1-1 direct messages
type GoDbChatMessagesDirect struct {
	MessageID uint64
	// Room ID
	MessageRoomID uint64
	// Receiver ID
	MessageReceiverID uint64
	MessageContent    string
	MessageType       NullGoDbChatMessagesDirectMessageType
	// Sent at
	MessageSentAt time.Time
}

// Group messages
type GoDbChatMessagesGroup struct {
	MessageID uint64
	// Room ID
	MessageRoomID uint64
	// Sender user ID
	MessageSenderID uint64
	MessageContent  string
	MessageType     NullGoDbChatMessagesGroupMessageType
	// Sent at
	MessageSentAt time.Time
}

// Chat rooms
type GoDbChatRoom struct {
	// Room ID
	RoomID uint64
	// Room name (null náº¿u 1-1)
	RoomName sql.NullString
	// Room description
	RoomDescription sql.NullString
	// Room avatar URL
	RoomAvatar sql.NullString
	// Is group chat?
	RoomIsGroup bool
	// Created by user ID
	RoomCreatedBy sql.NullInt64
	// Created at
	RoomCreatedAt sql.NullTime
}

// Room members
type GoDbChatRoomMember struct {
	// Room ID
	RoomID uint64
	// User ID
	MemberUserID uint64
	// Nickname in the room
	MemberNickname sql.NullString
	// Joined at
	MemberJoinedAt sql.NullTime
	// Role in the room
	MemberRole string
	// Message ID last Seen
	MemberLastSeen sql.NullInt64
}
