// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: go_db_chat_message_status.sql

package database

import (
	"context"
)

const saveMessageStatus = `-- name: SaveMessageStatus :exec
INSERT INTO go_db_chat_message_status (
    message_id,
    message_user_id
) VALUES (?, ?)
`

type SaveMessageStatusParams struct {
	MessageID     uint64
	MessageUserID uint64
}

func (q *Queries) SaveMessageStatus(ctx context.Context, arg SaveMessageStatusParams) error {
	_, err := q.db.ExecContext(ctx, saveMessageStatus, arg.MessageID, arg.MessageUserID)
	return err
}

const updateMessageStatus = `-- name: UpdateMessageStatus :exec
UPDATE go_db_chat_message_status s
JOIN go_db_chat_messages_direct d ON s.message_id = d.message_id
JOIN go_db_chat_rooms r ON d.message_room_id = r.room_id
SET s.message_is_read = TRUE,
    s.message_read_at = NOW()
WHERE r.room_id = ? AND d.message_receiver_id = ? AND s.message_is_read = FALSE
`

type UpdateMessageStatusParams struct {
	RoomID            uint64
	MessageReceiverID uint64
}

func (q *Queries) UpdateMessageStatus(ctx context.Context, arg UpdateMessageStatusParams) error {
	_, err := q.db.ExecContext(ctx, updateMessageStatus, arg.RoomID, arg.MessageReceiverID)
	return err
}
